<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <ProcessAppClipsDependsOn>
      _ResolveAppClips;
      _BuildAppClips;
    </ProcessAppClipsDependsOn>
  </PropertyGroup>

  <Target Name="_ResolveAppClips" Condition="'@(AppClips)' != ''">
    <PropertyGroup>
      <AppClipsArchiveBase Condition="'$(AppClipsArchiveBase)' == ''">$(IntermediateOutputPath)</AppClipsArchiveBase>
      <AppClipsArchiveDir Condition="'$(AppClipsArchiveDir)' == ''">xcodebuild/</AppClipsArchiveDir>
      <!-- We will always overwrite _AppClipsArchivePath to avoid mismatch with AppClipsArchiveBase and AppClipsArchiveDir -->
      <_AppClipsArchivePath>$(AppClipsArchiveBase)$(AppClipsArchiveDir)</_AppClipsArchivePath>
    </PropertyGroup>

    <Error Condition="Exists('%(AppClips.FullPath)') == 'false'" Code="404" Text="AppClips project not found: '%(AppClips.Identity)'" />

    <ItemGroup>
      <AppClips>
        <Scheme Condition="'%(AppClips.Scheme)' == ''">%(AppClips.Filename)</Scheme>
        <Configuration Condition="'%(AppClips.Configuration)' == ''">$(Configuration)</Configuration>
      </AppClips>
      <!-- We cannot add the ArchivePath in one go, so we have to do it separately once we have Scheme and Configuration metadata -->
      <AppClips>
        <ArchivePath>$(_AppClipsArchivePath)/%(AppClips.Scheme)-%(AppClips.Configuration).xcarchive</ArchivePath>
      </AppClips>
    </ItemGroup>
  </Target>

  <Target Name="_BuildAppClips" Condition="'@(AppClips)' != ''">

    <!-- The AppClips must have the same version as our app - so we must update it -->
    <Exec
      Condition="'$(ApplicationVersion)' != ''"
      Command="xcrun agvtool new-version -all '$(ApplicationVersion)'"
      WorkingDirectory="%(AppClips.RootDir)%(AppClips.Directory)" />

    <Exec
      Condition="'$(ApplicationDisplayVersion)' != ''"
      Command="xcrun agvtool new-marketing-version '$(ApplicationDisplayVersion)'"
      WorkingDirectory="%(AppClips.RootDir)%(AppClips.Directory)" />

    <!-- The agvtool new-marketing-version might not work if plist is auto generated -->
    <!-- So we will manually make sure it is updated -->
    <Exec
      Condition="'$(ApplicationDisplayVersion)' != ''"
      Command="sed -i '' 's/MARKETING_VERSION = .*/MARKETING_VERSION = $(ApplicationDisplayVersion);/g' '%(AppClips.FullPath)/project.pbxproj'"
      WorkingDirectory="%(AppClips.RootDir)%(AppClips.Directory)" />

    <Exec
      Command="xcrun xcodebuild archive -project '%(AppClips.FullPath)' -scheme '%(AppClips.Scheme)' -configuration '%(AppClips.Configuration)' -destination 'generic/platform=iOS' -archivePath '%(AppClips.ArchivePath)'"
      Outputs="%(AppClips.ArchivePath)" />
  </Target>

  <Target Name="ProcessAppClips" BeforeTargets="ProcessMauiAssets" DependsOnTargets="$(ProcessAppClipsDependsOn)" Condition="'$(TargetPlatformIdentifier)' == 'ios'">
    <ItemGroup Condition="'@(AppClips)' != ''">
      <AppClipsFiles Include="%(AppClips.ArchivePath)/**/*.app/AppClips/**" />

      <_AppClipsFiles>
        <TargetPath>$([System.Text.RegularExpressions.Regex]::Replace('%(_AppClipsFiles.RecursiveDir)', '^.*?AppClips[\\/]', ''))</TargetPath>
      </_AppClipsFiles>

      <MauiAsset Include="@(_AppClipsFiles)" LogicalName="AppClips/%(_AppClipsFiles.TargetPath)%(Filename)%(Extension)" />
    </ItemGroup>

    <Error Condition="'@(_AppClipsFiles)' == ''" Code="404" Text="No AppClips found in Xcode project: '%(AppClips.Identity)'" />
  </Target>

  <Target Name="VerifyAppClips" AfterTargets="CreateIpa" Condition="'$(TargetPlatformIdentifier)' == 'ios'">
    <Message Importance="high" Text="AppClips archive created at: $(_AppClipsArchivePath)" />
  </Target>

</Project>