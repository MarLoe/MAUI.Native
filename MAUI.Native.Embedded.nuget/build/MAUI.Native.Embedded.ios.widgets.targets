<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Condition="'$(TargetPlatformIdentifier)' == 'ios' AND $(BuildNativeEmbedded.Contains('Widgets'))">
    <_ResolveNativeEmbeddedDependsOn>
      $(_ResolveNativeEmbeddedDependsOn);
      _ResolveWidgets;
    </_ResolveNativeEmbeddedDependsOn>

    <_ProcessNativeEmbeddedDependsOn>
      $(_ProcessNativeEmbeddedDependsOn);
      ProcessWidgets;
    </_ProcessNativeEmbeddedDependsOn>

    <ProcessWidgetsDependsOn>
      _BuildWidgets;
    </ProcessWidgetsDependsOn>

    <_VerifyNativeEmbeddedDependsOn>
      $(_VerifyNativeEmbeddedDependsOn);
      VerifyWidgets;
    </_VerifyNativeEmbeddedDependsOn>
  </PropertyGroup>


  <Target Name="_ResolveWidgets">
    <Error Condition="Exists('%(Widgets.FullPath)') == 'false'" Code="404" Text="Widgets project not found: '%(Widgets.Identity)'" />

    <ItemGroup>
      <Widgets>
        <Scheme Condition="'%(Widgets.Scheme)' == ''">%(Widgets.Filename)</Scheme>
        <Configuration Condition="'%(Widgets.Configuration)' == ''">$(Configuration)</Configuration>
        <UnsignedName></UnsignedName>
      </Widgets>
      <Widgets Condition="'%(Widgets.NoSigning)' == 'true'">
        <UnsignedName>-unsigned</UnsignedName>
        <XcodeParams>$(XcodeParams) CODE_SIGN_IDENTITY=”” CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO</XcodeParams>
      </Widgets>
      <!-- We cannot add the ArchivePath in one go, so we have to do it separately once we have Scheme and Configuration metadata -->
      <Widgets>
        <ArchivePath>$(XcodeOutputPathRoot)/%(Widgets.Scheme)-%(Widgets.Configuration)%(Widgets.UnsignedName).xcarchive</ArchivePath>
      </Widgets>

      <!-- Consolidate all included Xcode projects -->
      <XcodeProjects Include="%(Widgets.FullPath)" />
    </ItemGroup>
  </Target>


  <Target Name="_BuildWidgets" Outputs="%(Widgets.ArchivePath)">
    <PropertyGroup>
      <_XcodeDestination Condition="$(TargetPlatformIdentifier) == 'ios'">iOS</_XcodeDestination>
      <_XcodeDestination Condition="$(RuntimeIdentifier.Contains('iossimulator')) == true">iOS Simulator</_XcodeDestination>
      <XCodeCommonParams>-destination 'generic/platform=$(_XcodeDestination)' $(XCodeCommonParams)</XCodeCommonParams>
    </PropertyGroup>
    <Exec
      Command="xcrun xcodebuild archive -project '%(Widgets.FullPath)' -scheme '%(Widgets.Scheme)' -configuration '%(Widgets.Configuration)' -archivePath '%(Widgets.ArchivePath)' $(XCodeCommonParams) %(Widgets.XcodeParams)"
      Outputs="%(Widgets.ArchivePath)" />
    <!-- 
      This built in task adds parameters to the xcodebuild that cannot be controlled,
      and might lead to compiler issues. Thus it is not feasable to use.
    <CreateXcArchive
      ProjectPath="%(Widgets.FullPath)"
      SchemeName="%(Widgets.Scheme)"
      Configuration="%(Widgets.Configuration)"
      ArchivePlatform="generic/platform=$(_XcodeDestination)"
      DerivedDataPath="$(XcodeOutputPathRoot)DerivedData"
      PackageCachePath="$(XcodeOutputPathRoot)Cache"
      OutputPath="%(Widgets.ArchivePath)"
      WorkingDirectory="%(Widgets.RootDir)%(Widgets.Directory)" />
    -->
  </Target>


  <Target Name="ProcessWidgets" DependsOnTargets="$(ProcessWidgetsDependsOn)" Condition="'@(Widgets)' != ''">
    <ItemGroup>
      <_AppexFiles Include="%(Widgets.ArchivePath)/**/*.app/PlugIns/**/*.appex/**" />
      <_AppexBundles Include="$([System.Text.RegularExpressions.Regex]::Replace('%(_AppexFiles.FullPath)', '(^.*\.appex)[\\/].*', '$1'))" />
    </ItemGroup>

    <!-- Make sure each .appex is actually a widget -->
    <Exec Command="plutil -extract NSExtension xml1 -o - '%(_AppexBundles.FullPath)/Info.plist' | grep com.apple.widgetkit-extension &amp;&amp; echo 'true' > '%(_AppexBundles.FullPath).widget'" IgnoreExitCode="true" />

    <ItemGroup>
      <AdditionalAppExtensions Include="%(_AppexBundles.FullPath)/.." Condition="Exists('%(_AppexBundles.FullPath).widget')">
        <Name>%(_AppexBundles.Filename)</Name>
      </AdditionalAppExtensions>
    </ItemGroup>
  </Target>


  <Target Name="VerifyWidgets" Condition="'@(Widgets)' != ''">
    <!-- TODO: Find a way to verify that Widgets was correctly included -->
  </Target>


  <Target Name="BuildWidgets" DependsOnTargets="ProcessWidgets" />

</Project>